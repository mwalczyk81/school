@using Weather.Models.Weather

@inject IDialogService DialogService

<!-- Fullscreen modal for small screens (sm and below) -->
<MudHidden Breakpoint="Breakpoint.SmAndDown">
    <MudDialog Options="new DialogOptions() {MaxWidth=MaxWidth.Medium, FullWidth=true, FullScreen=true }" Style="width: 600px; height: 700px;">
        <DialogContent>
            <MudText Align="Align.Center" Typo="Typo.h5">Details for @DateTime.Parse(DayName ?? "").ToString("MMM d")</MudText>
            <MudDivider Class="my-2" />

            <!-- Responsive Grid for Hourly Forecasts -->
            <MudGrid Spacing="3" Justify="Justify.Center">
                @foreach (var hourly in HourlyDetails!)
                {
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudPaper Class="pa-4 text-center" Elevation="2" MinWidth="120px" MaxWidth="220px" MinHeight="250px" Style="padding=20px">
                            <MudStack Spacing="2" AlignItems="AlignItems.Center" Justify="Justify.Center" Style="height: 100%;">
                                <MudAvatar Size="MudBlazor.Size.Medium">
                                    <MudImage Src="@GetIconUrl(hourly.Weather?[0]?.Icon ?? "")" Alt="@hourly.Weather?[0]?.Description" />
                                </MudAvatar>
                                <MudText Typo="Typo.caption">@DateTime.Parse(hourly.Dt_Txt ?? "").ToString("h:mm tt")</MudText>
                                <MudText Typo="Typo.body2">@Math.Round(hourly.Main?.Temp ?? 0)°F</MudText>
                                <MudText Typo="Typo.caption">@hourly.Weather?[0]?.Description</MudText>
                            </MudStack>
                        </MudPaper>
                    </MudItem>
                }
            </MudGrid>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="CloseDialog" Color="Color.Primary">Close</MudButton>
        </DialogActions>
    </MudDialog>
</MudHidden>

<!-- Normal modal for medium and larger screens (md and above) -->
<MudHidden Breakpoint="Breakpoint.MdAndUp">
    <MudDialog Options="new DialogOptions() {MaxWidth=MaxWidth.Medium, FullScreen=false }">
        <DialogContent>
            <MudText Typo="Typo.h5">Details for @DateTime.Parse(DayName ?? "").ToString("MMM d")</MudText>
            <MudDivider Class="my-2" />

            <!-- Responsive Grid for Hourly Forecasts -->
            <MudGrid Spacing="3" Justify="Justify.Center" AlignItems="Center">
                @foreach (var hourly in HourlyDetails!)
                {
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudPaper Class="pa-4 text-center" Elevation="2" Style="min-height: 250px; max-width: 220px;">
                            <MudStack Spacing="2" AlignItems="AlignItems.Center" Justify="Justify.Center" Style="height: 100%;">
                                <MudAvatar Size="MudBlazor.Size.Medium">
                                    <MudImage Src="@GetIconUrl(hourly.Weather?[0]?.Icon ?? "")" Alt="@hourly.Weather?[0]?.Description" />
                                </MudAvatar>
                                <MudText Typo="Typo.caption">@DateTime.Parse(hourly.Dt_Txt ?? "").ToString("h:mm tt")</MudText>
                                <MudText Typo="Typo.body2">@Math.Round(hourly.Main?.Temp ?? 0)°F</MudText>
                                <MudText Typo="Typo.caption">@hourly.Weather?[0]?.Description</MudText>
                            </MudStack>
                        </MudPaper>
                    </MudItem>
                }
            </MudGrid>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="CloseDialog" Color="Color.Primary">Close</MudButton>
        </DialogActions>
    </MudDialog>
</MudHidden>

@code {
    [Parameter] public string? DayName { get; set; }
    [Parameter] public IEnumerable<ForecastItem>? HourlyDetails { get; set; }
    [CascadingParameter] public MudDialogInstance? MudDialog { get; set; }

    private void CloseDialog() => MudDialog?.Close();

    private string GetIconUrl(string icon) => $"https://openweathermap.org/img/wn/{icon}.png";
}
